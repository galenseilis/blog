{
  "hash": "09907728400d9e3334bdb432e3ddcef7",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Implementing a D/M/1 Queue in Ciw\"\nauthor: \"Galen Seilis\"\ndate: \"2023-12-20\"\ncategories: [Python, Discrete Event Simulation, Ciw, Queueing Network,  Queueing System, Queueing Theory, Exponential Distribution, Statistics, Operations Research, Random Variables, Inter-Arrival Times, Service Times, Random Number Generation, Servers]\necho: true\n---\n\n\n## Introduction\n\n[Ciw](https://ciw.readthedocs.io/en/latest/) is a [Python](https://www.python.org/) package for [simulating](https://en.wikipedia.org/wiki/Discrete-event_simulation) [queueing networks](https://en.wikipedia.org/wiki/Queueing_theory). \n\n## Simulation\n\nA [D/M/1 queue](https://en.wikipedia.org/wiki/D/M/1_queue) can be implemented and simulated using Ciw in the following way.\n\n::: {#b2238edd .cell execution_count=1}\n``` {.python .cell-code}\nimport ciw\n\nciw.seed(2018)\n\nARRIVAL_TIME = 1\nSERVICE_TIME = 1 / 2\nHORIZON = 365\n\nnetwork = ciw.create_network(\n    arrival_distributions = [ciw.dists.Deterministic(ARRIVAL_TIME)],\n    service_distributions = [ciw.dists.Exponential(SERVICE_TIME)],\n    number_of_servers = [1]\n    )\n\nsimulation = ciw.Simulation(network)\nsimulation.simulate_until_max_time(HORIZON)\nrecords = simulation.get_all_records()\n```\n:::\n\n\n## Results\n\nWe can tabulate the results.\n\n::: {#7898f27b .cell execution_count=2}\n``` {.python .cell-code}\nfrom IPython.display import Markdown, display\nimport pandas as pd\nrecords = pd.DataFrame(records)\ndisplay(\n    Markdown(\n        records\n        [['waiting_time', 'service_time', 'queue_size_at_arrival', 'queue_size_at_departure']]\n        .describe()\n        .to_markdown()\n        )\n    )\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown}\n|       |   waiting_time |   service_time |   queue_size_at_arrival |   queue_size_at_departure |\n|:------|---------------:|---------------:|------------------------:|--------------------------:|\n| count |       183      |    183         |                183      |                  183      |\n| mean  |        71.9111 |      1.96964   |                 36.8087 |                   73.3607 |\n| std   |        51.243  |      1.8815    |                 25.7219 |                   51.6083 |\n| min   |         0      |      0.0229044 |                  0      |                    0      |\n| 25%   |        19.1338 |      0.676208  |                 13.5    |                   20      |\n| 50%   |        75.1552 |      1.28472   |                 34      |                   76      |\n| 75%   |       111.045  |      2.53828   |                 61      |                  112      |\n| max   |       175.985  |      9.49261   |                 80      |                  179      |\n:::\n:::\n\n\nWe can plot the arrival times against the waiting times.\n\n::: {#e4badf27 .cell execution_count=3}\n``` {.python .cell-code}\nrecords.plot(x='arrival_date', y='waiting_time')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=575 height=429}\n:::\n:::\n\n\nWe can plot the service start times against the service times.\n\n::: {#cd614a5e .cell execution_count=4}\n``` {.python .cell-code}\nrecords.plot(x='service_start_date', y='service_time')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=558 height=429}\n:::\n:::\n\n\nWe can plot the arrival dates against the length of the queue when the customer arrived.\n\n::: {#dc200924 .cell execution_count=5}\n``` {.python .cell-code}\nrecords.plot(x='arrival_date', y='queue_size_at_arrival')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=566 height=429}\n:::\n:::\n\n\nWe can plot the departure dates against the length of the queue when the customer departed.\n\n::: {#44b01ec5 .cell execution_count=6}\n``` {.python .cell-code}\nrecords.plot(x='exit_date', y='queue_size_at_departure')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=575 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}