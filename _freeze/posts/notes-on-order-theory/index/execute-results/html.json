{
  "hash": "d9d1aaebcd37e06060a5fdd5afb5e708",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Notes on Order Theory\"\nauthor: \"Galen Seilis\"\ndate: \"2024-07-21\"\ncategories: [Math, Order Theory, Partial Orders, Reflexivity, Transitivity, Antisymmetry, Asymmetry, Cartesian Product, Binary Relations, Relations, Python, LaTeX, Directed Acyclic Graphs, Strict Partial Orders, Comparability, Comparable Pairs, Incomparable Pairs, Comparability Graphs, Cocomparability Graphs, Cover Graphs, Cover Digraphs, Cover Diagrams]\n---\n\n\n# Fundamentals\n\n## Essential Definitions and Examples\n\n> **Definition**\n> A partial order is a pair $(X, \\leq)$ composed of a set $X$ called the ground set and $\\leq$ is a binary relation with the following relation:\n- reflexivity: $x \\leq x\\ \\forall x \\in X$\n- transitivity: $x \\leq y \\land y \\leq z \\implies x \\leq z\\  \\forall x,y,z \\in X$\n- antisymmtry: $x \\leq y \\land y \\leq x \\implies x = y\\  \\forall x,y \\in X$\n\nLet us consider an example of a partial order and some of the ways we can represent them.\n\n> **Example**\n> Let $X = \\{a, b, c, d, e \\}$, then we might have a partial order $\\\\{(a,a), (a,c), (a,e), (b,b), (b,c), (b,d), (b,e), (c,c), (d,d), (d,e), (e,e)\\\\}$. This partial order can be represented as a matrix.\n>\n> $$\\begin{array}{c c} &\n\\begin{array}{c c c c c} a & b & c & d & e \\\\\n\\end{array}\n\\\\\n\\begin{array}{c c c c c}\na \\\\\nb \\\\\nc \\\\\nd \\\\\ne \\\\\n\\end{array}\n&\n\\left[\n\\begin{array}{c c c c c}\n1 & 0 & 1 & 0 & 1 \\\\\n & 1 & 1 & 1 & 1 \\\\\n &  & 1 & 0 & 0 \\\\\n & \\huge 0 &  & 1 & 1 \\\\\n &  &  &  & 1 \\\\\n\\end{array}\n\\right]\n\\end{array}\n$$\n>\nAnother representation is a directed graph (AKA a digraph):\n> ![](/assets/images/example_digraph_representation_of_a_partial_order.png)\n\n> The previous example only required a relatively small subset of the Cartesian $X \\times X$. When you a have too many elements in $X$ to deal with by hand, one quick Python script to make the pairs in a format suitable for $\\LaTeX$ is the following:\n\n::: {#505faf04 .cell execution_count=1}\n``` {.python .cell-code}\nfrom itertools import product\nfrom graphviz import Digraph\nX = 'a', 'b', 'c', 'd', 'e'\nXxX = ['('+', '.join(i) + ')' for i in product(X,X)]\nXxX = sorted(XxX)\nXxX = str(XxX).replace(\"'\", \"\")\nXxX = XxX.replace(\"[\", \"\\\\\\\\{\")\nXxX = XxX.replace(\"]\", \"\\\\\\\\}\")\nprint(XxX)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\\\\{(a, a), (a, b), (a, c), (a, d), (a, e), (b, a), (b, b), (b, c), (b, d), (b, e), (c, a), (c, b), (c, c), (c, d), (c, e), (d, a), (d, b), (d, c), (d, d), (d, e), (e, a), (e, b), (e, c), (e, d), (e, e)\\\\}\n```\n:::\n:::\n\n\n::: {#036fd0f2 .cell execution_count=2}\n``` {.python .cell-code}\nXxX = 'aa', 'ac', 'ae', 'bb', 'bc', 'bd', 'be', 'cc', 'dd', 'de', 'ee'\nD = Digraph('example_partial_order')\nfor xx in XxX:\n    D.edge(xx[0], xx[1])\n\nD\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n![](index_files/figure-html/cell-3-output-1.svg){}\n:::\n:::\n\n\n> The digraph diagram in the previous example can be made with the following snippet of code:\n```python\nfrom graphviz import Digraph\nXxX = 'aa', 'ac', 'ae', 'bb', 'bc', 'bd', 'be', 'cc', 'dd', 'de', 'ee'\nD = Digraph('example_partial_order')\nfor xx in XxX:\n    D.edge(xx[0], xx[1])\nD.view()\n```\n> This will produce a portable document formatted file named `example_partial_order.gv.pdf`.\n{: .prompt-tip}\n\n\n> **Definition**\n> A strict partial order is a pair $(X, <)$ composed of a set $X$ called the ground set and $<$ is a binary relation with the following relation:\n- transitivity: $x < y \\land y < z \\implies x < z\\  \\forall x,y,z \\in X$\n- asymmetry: $\\lnot (x < y \\land y < x) \\  \\forall x,y \\in X$\n\n> **Proposition** The digraph representation of a strict order is a directed acyclic graph (DAG).\n\nOften we can start with a strict order and derive similar results for a corresponding (non-strict) partial order.\n\n> **Definition** $\\{x,  y\\}$ are a comparable pair if $x < y \\lor y > x$, denoted $x \\sim y$.\n\n> **Definition** A graph $G = (V, E)$ whose edge set $E$ is the set of comparable pairs of a partial order is called the comparability graph.\n\n> **Example** Suppose we have the strict partial order $\\\\{(a,c), (a,e), (b,c), (b,d), (b,e), (d,e)\\\\}$, then its comparability graph would look like:\n\n```{mermaid}\nflowchart TB\n    a o--o c\n    a o--o e\n    b o--o c\n    b o--o d\n    b o--o e\n    d o--o e\n```\n\n\n> **Definition** $\\{x,  y\\}$ are an incomparable pair if $\\lnot (x < y \\lor y > x)$, denoted $x \\parallel y$.\n\n> **Definition** A graph $G = (V, E)$ whose edge set $E$ is the set of incomparable pairs of a partial order is called the comparability graph.\n\n> **Example** Suppose we have the strict partial order $\\\\{(a,c), (a,e), (b,c), (b,d), (b,e), (d,e)\\\\}$, then its incomparability graph (AKA cocomparability graph) would look like:\n\n```{mermaid}\nflowchart TB\n    a o--o b\n    a o--o d\n    c o--o d\n    c o--o e\n```\n\n\n> **Proposition** The edge set of an incomparability graph is the complement of the edge set of the comparability graph.\n\n> **Definition** A cover relation $x \\prec y$ is satisfied when $x < y$ and there does not exist $z$ such that $x < z < y$.\n\n> **Definition** A graph $G = (V, E)$ is a cover graph when its edge set $E$ is a collection of pairs satisfying a cover relation.\n\n> **Example** Suppose we have the strict partial order $\\\\{(a,c), (a,e), (b,c), (b,d), (b,e), (d,e)\\\\}$, then its cover graph would look like:\n\n```{mermaid}\nflowchart TB\n    a o--o c\n    a o--o e\n    b o--o c\n    b o--o d\n    d o--o e\n```\n\n\n> **Definition** A directed graph $D = (V, E)$ is a directed cover graph when its edge set $E$ is a collection of pairs satisfying a cover relation and the order of the pairs is represented with arcs.\n\n> **Example** Suppose we have the strict partial order $\\\\{(a,c), (a,e), (b,c), (b,d), (b,e), (d,e)\\\\}$, then its directed cover graph would look like:\n\n```{mermaid}\nflowchart TB\n    e --> a\n    e --> d\n    c --> a\n    c --> b\n    d --> b\n```\n\n\n\n> **Definition** A cover diagram is a drawing of the directed graph representing a cover relation such that the edges are cover pairs $(x,y)$. Edges are drawn in such a way that $x$ is below $y$ (in the graph embedding) ad the edge is $y$-monotone.\n\n> **Example** Suppose we have the strict partial order $\\\\{(a,c), (a,e), (b,c), (b,d), (b,e), (d,e)\\\\}$, then its cover diagram would look like:\n![](/assets/images/example_cover_relation_diagram.png)\n\n> The previous example can be plotted using the following Python script:\n```python\nimport matplotlib.pyplot as plt\nimport networkx as nx\ng = nx.Graph()\ng.add_edge('a', 'c')\ng.add_edge('a', 'e')\ng.add_edge('b', 'c')\ng.add_edge('b', 'd')\ng.add_edge('d', 'e')\npos = {'a':(0,1),\n       'b':(1,0),\n       'c':(0,3),\n       'd':(2,2),\n       'e':(1,4)}\nnx.draw(g, pos=pos, labels={i:i for i in g.nodes()}, node_color=(0.5,)*3)\nplt.savefig('example_cover_relation_diagram.png', dpi=300, transparent=True)\nplt.close()\n```\n{: .prompt-tip}\n\n## Special Classes of Orders\n\n- linear orders (aka total orders, aka chains).\n  - Important in computer science problems such as sorting.\n  - Important in mathematics for defining sets of numbers such as $\\mathbb{N}$, $\\mathbb{Z}$, $\\mathbb{R}$ and others.\n- Boolean lattices\n  - $B_n = (2^{[n]}, \\subseteq )$ where $$[n] = \\{ 1, \\ldots, n \\}$$\n  - Looks at subsets of $n$ ordered by inclusion\n\n> **Proposition** The subset relation on any family of sets is an order relation.\n\n> **Example** [Intervals](https://en.wikipedia.org/wiki/Interval_(mathematics)), [discs](https://en.wikipedia.org/wiki/Disk_(mathematics)), [balls](https://en.wikipedia.org/wiki/Ball_(mathematics)), [subtrees](https://mathworld.wolfram.com/Subtree.html), [subgraphs](https://mathworld.wolfram.com/Subgraph.html), [subgroups](https://en.wikipedia.org/wiki/Subgroup) are all included sets under the order relation of set [inclusion](https://en.wikipedia.org/wiki/Inclusion_order).\n\n> **Definition** A containment relation is [...]\n\n> **Definition** For $A \\subseteq X$ we have the down-set of $A$ being\n> $$D[A] = \\bigcup_{a \\in A} D[a] = \\{ x | \\exists a \\in A\\ \\text{s.t.}\\ x \\leq a \\}$$.\n\n> **Proposition** Every finite order is the containment order of a family of sets.\n>\n> **Proof** Let $P = (X, \\leq)$ be an order relation.\n>\n> For $a \\in X$ let $D[a] = \\{ x : x \\leq a \\}$ be the down-set of a.\n>\n> Let $$y = \\{ D[a] : a \\in X \\}$$.\n>\n> Now we claim that $P \\cong (y, \\subseteq )$ where $\\cong$ is an order-preserving isomorphism.\n>\n> Since isomorphisms are bijections, we take the bijection in this case to $D : x \\mapsto D[x]$.\n>\n> We need to verify that $D$ as we have just defined it is actually a bijection.\n>\n> If a mapping is a bijection, then it is both injective and surjective.\n>\n> Considering the injective case, let take two elements $x$ and $y$ such that $x \\neq y$ then there are three possibilities:\n> - $x < y \\implies y \\not\\in D[x]$\n> - $x > y \\implies x \\not\\in D[y]$\n> - $x \\parallel y$ (i.e. $x$ and $y$ are not comparable in the order) which implies $(y \\not\\in D[x]) \\land (x \\not\\in D[y])$\n>\n> Surjectivity is given by definition of $D$.\n>\n> And we have that $D$ is order-preserving in the sense that $x \\leq y \\iff D[x] \\subseteq D[y]$.\n> $$\\blacksquare$$\n\n> **Definition** A lower bound of a subset $S$ of partially ordered set $(P, \\leq)$ is an element $a \\in P$ such that $a \\leq x \\forall x \\in S$.\n\n> **Definition** A lower bound $a \\in S$ is called an infinum (or greatest lower bound, or meet) of $S$ if for all lower bounds $y \\in S$ we have $y \\leq a$.\n\n> **Definition** An upper bound of a subset $S$ of partially ordered set $(P, \\leq)$ is an element $b \\in P$ such that $b \\geq x \\forall x \\in S$.\n\n> **Definition** An upper bound $b$ of $S$ is called a supremum (or least upper bound, or join) of $S$ if for all upper bounds $z \\in S$ we have $z \\leq b$.\n\n> **Definition** A finite poset on $S$ is a lattice if every subset of $S$ has an unique least upper bound (aka join or supremum) denoted $\\lor$ and an unique greatest lower bound (aka meet or infinum) denoted $\\land$.\n\n> **Definition** The down-set lattice of $P$ given by\n> $$D(P) = (\\{ D[A] : A \\subset X \\}, \\subseteq)$$.\n\n> **Definition** A lattice $(L, \\lor, \\land)$ is distributive if the following identity holds for all $x,y,z \\in L$:\n>\n> $$x \\land (y \\lor z) = (x \\land y) \\lor (x \\land z)$$\n>\n> where $\\land$ and $\\lor$ are the [meet and join](https://en.wikipedia.org/wiki/Join_and_meet) operations.\n\n> **Proposition** The down-set lattice of $P$ is a distributive lattice.\n>\n> **Proof (Hint)** Take $\\lor$ to be $\\cup$ and $\\land$ to be $\\cap$.\n\n> **Example**\n\n> **Definition** $Q = (Y, \\leq_Q ) $ is a subposet of $P = (X, \\leq_P)$ if $Y \\subseteq X$ and $(\\leq_Q) = (\\leq_P) \\cap (Y \\times Y)$.\n\n\n\n\n# References\n- [Lectures: Introduction to Order Theory, Fall 2020](https://www.youtube.com/playlist?list=PL5rqYzyihIQ0nzfnsEKxxedCpbNQoifgg)\n- [Introduction to Order Theorie](https://page.math.tu-berlin.de/~felsner/Lehre/dsIII20-21.html)\n- [Introduction to order theory](https://piotrmicek.staff.tcs.uj.edu.pl/introduction-to-order-theory-2020/)\n- [Infinum and Supremum](https://en.wikipedia.org/wiki/Infimum_and_supremum)\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}